Motion planning: OpenRave
----------
Allgemeines zu ROS:
https://www.generationrobots.com/blog/de/ros-robot-operating-system/

ROS Version:
melodic

gedit als editor
netbeans mit c++?

(nur Kern) ROS starten (neues Konsolenfenster):
roscore

Laufende Nodes anschauen:
rosnode list

Node Verbindungen anschauen:
rosrun rqt_graph rqt_graph

neues Kommando installieren:
sudo apt-get install ros-<distro="melodic">-<Kommando>
//sudo apt-get install python-catkin-tools ->gibt catkin clean
//sudo apt-get install python-wstool ->gibt wstool, um multiple workspaces zu verwalten

Mehrere gleiche Node-Typen aufmachen:
name ändern in vicon-launch

Ros Messages anschauen:
rosmsg show [message type]

Rviz (3D-Visualisierungssystem) zum anschauen

ROS Pfad: /opt/ros/melodic

Repo bereinigen:
//catkin clean -> tut nicht

Daten aufzeichnen und abspielen:
http://wiki.ros.org/ROS/Tutorials/Recording%20and%20playing%20back%20data

IDE: http://wiki.ros.org/IDEs
https://code.visualstudio.com/docs/setup/linux
https://marketplace.visualstudio.com/items?itemName=ms-iot.vscode-ros
code


----------
Hardware anschalten:

1. Stecker einstecken
2. anderen Rechner einschalten
3. anmelden: mobmonrob
4. vicon tracker neuestes ausführen
Wenn weißes Kabel nicht drin:
reinstecken
Netzwerk Knfig:
    192.168.10.1
    255.255.255.0
----------
Bauen:

Für jedes Konsolenfenster mit meinem Workspace:
source devel/setup.bash
am Anfang ausführen
->künfitg vielleicht: https://answers.ros.org/question/205976/sourcing-from-multiple-workspaces/

Projekt bauen, von src initialisieren nach devel und build gelöscht:
catkin_make (clean)


----------
Laufen lassen:

Für jedes Konsolenfenster mit meinem Workspace:
source devel/setup.bash
am Anfang ausführen
->künfitg vielleicht: https://answers.ros.org/question/205976/sourcing-from-multiple-workspaces/

(Kern enthalten) Nodes lokal starten: ->sonst schließt sich die erste Verbindung nach Start der zweiten automatisch
roslaunch vicon_bridge vicon.launch

Nachrichten auslesen im Worspace:
Neues Konsolenfenster:
rostopic echo vicon/test1/test1
----------
Getan:

Uhrzeit eingestellt
Dokumentation gesichtet
Tutorial angefangen
    ---> aktueller Stand: http://wiki.ros.org/ROS/Tutorials/UsingRqtconsoleRoslaunch
    //Problem: 2 seperate workspaces
        Lösung: source devel/setup.bash am Anfang ausführen (macht meinen temporär zum 1.)
    //Problem: roslaunch vicon_bridge vicon.launch -->Fehler wegen zwei Repos?
        Lösung: http://wiki.ros.org/catkin/Tutorials/workspace_overlaying
Tutorial weiter
src analysieren
git aktivieren
Unklarheiten klären
Integration beginnen
    Neuen Node erstellen
    (11:50-) IDE
----------
Tun:

Vicon ROS ergänzen um Code aus openpose (kopieren) -> https://github.com/stevenjj/openpose_ros/blob/master/skeleton_extract_3d/src/skeleton_extract_3d_visualization_node.cpp
vicon_bridge soll rviz kompatible messages ausgeben -> fixe Konfiguration für Message Felder, die vicon nicht liefert
neuer node in vicon_bridge erstellen
    -> code umzustrukturieren



Links:
http://wiki.ros.org/ROS/Tutorials/CreatingMsgAndSrv
http://wiki.ros.org/msg
-->http://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber%28c%2B%2B%29
http://wiki.ros.org/ROS/Tutorials
http://wiki.ros.org/ROS/Tutorials/Creating%20a%20Package%20by%20Hand
http://wiki.ros.org/rviz/Tutorials/Markers%3A%20Basic%20Shapes
http://wiki.ros.org/rviz/Tutorials/Markers%3A%20Points%20and%20Lines
http://wiki.ros.org/rviz/DisplayTypes/Marker
http://docs.ros.org/latest/api/catkin/html/howto/format2/building_msgs.html
http://wiki.ros.org/vicon_bridge
----------


Zum Testen: eigenes launchfile

Input:
https://github.com/stevenjj/openpose_ros#3d-detection-module
*Here you should change /usb_cam_3d/image_raw/ for the topic your camera will be publishing the sensor_msgs::Image messages (RGB images). You should also change /kinect2/qhd/points for the topic your camera will be publishing the sensor_msgs::Pointcloud2 messages (depth images).


Bei vicon_bridge: wo den openpose Code einfügen?
    wohl relevant: Marker.msg, Markers.msg, vicon_bridge.cpp
->neues ROS-Node erzeugen in Projekt
    ->schauen, wo sie erzeugt werden

vicon APi Dokumentation

